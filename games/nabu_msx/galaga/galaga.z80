; Galaga Conversion
;
; Copyright (c) 2024 Brian Johnson.  All rights reserved.
;
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions
; are met:
; 1. Redistributions of source code must retain the above copyright
;    notice, this list of conditions and the following disclaimer.
; 2. Redistributions in binary form must reproduce the above copyright
;    notice, this list of conditions and the following disclaimer in the
;    documentation and/or other materials provided with the distribution.
;
; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

.include "constants.inc"

.section .rodata.splash, "adr"
.global splash_msg
splash_msg:
	.byte 2, 12, 0x1b, "Conversion by Brian Johnson"
	.byte 0, 0, 0

.section .rodata.patches, "adr"
.global rom_patch_table
rom_patch_table:
; -----------------------------------
; Install custom main_loop into RST 8
; -----------------------------------
	.word 0x0008
	.byte 3, 0xc3
	.word main_loop

; -----------------------------------
; Redirect to our main_loop via RST 8
; -----------------------------------
	.word 0x404a
	.byte 1, 0xcf

	.word 0
	.byte 0

.section .text.galaga, "acrx"
.global keyboard_irq
keyboard_irq:
	push   af
	push   bc
	in     a, (KBD_DATA)
	cp     0x94
	jp     z, kbirq_exit
	cp     0xa0
	jr     c, kbirq_exit
	cp     0xc0
	jr     nc, kbirq_exit
handle_joystick:
	ld     b, a
	and    0x12
	bit    0, b
	jr     nz, joystick.left
	bit    2, b
	jr     nz, joystick.right
	bit    3, b
	jr     nz, joystick.up
	jr     joystick.set
joystick.right:
	set    3, a
	jr     joystick.set
joystick.up:
	set    0, a
	jr     joystick.set
joystick.left:
	set    2, a
joystick.set:
	ld     (joystick_state), a
kbirq_exit:
	pop    bc
	pop    af
	ret

main_loop:
	in     a, (KBD_STAT)
	bit    1, a
	jr     z, vdp_check
	call   keyboard_irq
vdp_check:
	in     a, (VDP_LATCH)
	and    a
	jp     p, main_loop
	call   H_KEYI
	jr     main_loop

.section .rodata.galaga, "adr"
.global irq_mask
irq_mask:
	.byte  0x00                   ; Mask all interrupts

.section .msx, "acrx"
.incbin "galaga.rom"
