; MSX ROM Loader
;
; Copyright (c) 2024 Brian Johnson.  All rights reserved.
;
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions
; are met:
; 1. Redistributions of source code must retain the above copyright
;    notice, this list of conditions and the following disclaimer.
; 2. Redistributions in binary form must reproduce the above copyright
;    notice, this list of conditions and the following disclaimer in the
;    documentation and/or other materials provided with the distribution.
;
; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

.include "constants.inc"

.set          MSX_END,   MSX_LOAD + msxlength - 1
.set          MSX_INIT,  MSX_LOAD + 2

.extern patch, splash
.extern patch_table, rom_patch_table

.section .crt0.jp, "acrx"

	nop
	nop
	nop
	jp     entry

.section .crt0.entry, "acrx"
entry:
	di
	ld     sp, 0xE000          ; Set temporary stack to high 8k of RAM
	ld     a, 0x03
	out    (0x00), a           ; Disable ROM
	
	ld     hl, msxcode_end - 1 ; Copy ROM code to 0x4000-0xbfff
	ld     de, MSX_END
	ld     bc, msxlength
	lddr

	ld     ix, patch_table
	call   patch               ; Patch common MSX BIOS addresses
	ld     ix, rom_patch_table
	call   patch               ; Patch ROM addresses
	call   splash              ; Display splash screen

	ld     a, IM2_PAGE         ; Interrupt vector at address 0x1500
	ld     i, a
	im     2                   ; Interrupt Mode 2

	ld     a, 0x07             ; I/O Port configuration register
	out    (0x41), a
	ld     a, 0x7F             ; Port A write, Port B read
	out    (0x40), a
	ld     a, 0x0E             ; I/O Port A register
	out    (0x41), a
	ld     a, (irq_mask)       ; configure irq mask
	out    (0x40), a
	ei
	ld     hl, (MSX_INIT)
	jp     (hl)                ; Jump to MSX ROM entry point

.weak irq_mask
irq_mask:
	.byte  0x30                ; Enable VBlank and keyboard interrupt
